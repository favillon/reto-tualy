version: "3.7"
services:
  app:
    container_name: "${OWNER_CONTAINER}-${NAME_CONTAINER}-node"
    env_file : 
      - .env
    build: 
      context: .
      dockerfile: Docker/Dockerfile
    volumes:
      - .:/usr/src/app/
      - /usr/src/app/node_modules
    ports:
      - '${PORT_SERVER}:3000'
      - '587:587'
      - '443:443'
      - '25:25'
    extra_hosts:
      - "smtp.mailtrap.io:54.158.84.126"
    networks:
      - redinterna
  bd:
    container_name: ${OWNER_CONTAINER}-${NAME_CONTAINER}-psql
    image: postgres:13
    restart: always
    env_file:
      - .env
    ports:
      - '${PORT_BD}:5432'
    volumes:
      - contenedorbd:/var/lib/postgresql/data/
      - ./Docker/configs/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    networks:
      - redinterna
  redis:
    image: redis
    container_name: ${OWNER_CONTAINER}-${NAME_CONTAINER}-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - redinterna
  redis-commander:
    container_name: ${OWNER_CONTAINER}-${NAME_CONTAINER}-redis-commander
    image: rediscommander/redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "${REDIS_PORT_COMMANDER}:8081"
    networks:
      - redinterna
volumes:
  contenedorbd:
    external:
      name: "bd-${VOLUMEN_BD}-${NAME_CONTAINER}"
networks:
  redinterna:
    name: "red-${VOLUMEN_BD}-${NAME_CONTAINER}"
    driver: bridge